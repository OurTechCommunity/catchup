#!/bin/sh

set -eu;

script_dir=$(dirname "${0}");
base_dir=$(realpath "${script_dir}/..");
public_dir="${base_dir}/public";
summary_dir="${base_dir}/summary";

echo "Building summary pages using Asciidoctor Jet...";

# Create required directories if they don't exist
mkdir -p "${public_dir}/css/summary";
mkdir -p "${public_dir}/summary";
mkdir -p "${public_dir}/js/summary";
mkdir -p "${public_dir}/img/summary";

# Remove all summary files to prevent residual files
rm -rf "${public_dir}/css/summary/"*;
rm -rf "${public_dir}/summary/"*;
rm -rf "${public_dir}/js/summary/"*;
rm -rf "${public_dir}/img/summary/"*;
rm -f "${summary_dir}/autogenerated-combined-summary.adoc";

# Copy files to public directory for static serving
cp -r "${summary_dir}/static/css/"* "${public_dir}/css/summary";
cp -r "${summary_dir}/static/js/"* "${public_dir}/js/summary";
cp -r "${summary_dir}/static/img/"* "${public_dir}/img/summary";

# Reverse order so summaries are newest to oldest
BUILD_SUMMARY_DIRS="";
for path in "${summary_dir}/sessions/"*; do
	if [ -d "${path}" ]; then
		BUILD_SUMMARY_DIRS="${path} ${BUILD_SUMMARY_DIRS}";
	fi;
done;

# Build individual summary pages
for path in ${BUILD_SUMMARY_DIRS}; do
	if [ -d "${path}" ]; then
		catchup_number=${path##*/};
		catchup_display_number=$(printf "%.0f" "${catchup_number}");

		# If summary/sessions/${catchup_number}/combined-summary.adoc exists,
		# then use it, else use the default template
		combined_summary_template="sessions/${catchup_number}/combined-summary.adoc";
		if [ ! -f "${summary_dir}/${combined_summary_template}" ]; then
			combined_summary_template="combined-summary-template.adoc";
		fi;

		# Use the first image named `${catchup_number}.*`
		catchup_image_folder="${summary_dir}/static/img";
		catchup_image_extension="";
		# Only search for an image extension if used in the template
		if grep -Fq "{catchup_image_extension}" "${summary_dir}/${combined_summary_template}"; then
			for image in "${catchup_image_folder}/${catchup_number}."*; do
				if [ -e "${image}" ]; then
					if [ -z "${catchup_image_extension}" ]; then
						# remove `${catchup_image_folder}/${catchup_number}.` from path,
						# leaving only the extension
						catchup_image_extension=${image##*"${catchup_image_folder}"/"${catchup_number}".};
					else
						echo "warning: found multiple images for catchup #${catchup_number}, ignoring ${image}";
					fi;
				fi;
			done;
			if [ -z "${catchup_image_extension}" ]; then
				echo "error: could not find image for catchup #${catchup_number} in: ${catchup_image_folder}";
				exit 1;
			fi;
		fi;

		# Add template to combined summary page
		{
			echo ":catchup_number:          ${catchup_number}";
			echo ":catchup_display_number:  ${catchup_display_number}";
			echo ":catchup_image_extension: ${catchup_image_extension}";
			echo "include::${combined_summary_template}[]";
			echo "";
		} >> "${summary_dir}/autogenerated-combined-summary.adoc";

		asciidoctor \
			-a webfonts! \
			-a "catchup_number=${catchup_number}" \
			-a "catchup_display_number=${catchup_display_number}" \
			-a "catchup_image_extension=${catchup_image_extension}" \
			-a "combined_summary_file=${combined_summary_template}" \
			-o "${public_dir}/summary/${catchup_number}.html" \
			"${summary_dir}/individual-summary.adoc";

		# Lazy load images
		sed -i -e "s/<img/<img loading=\"lazy\"/g" "${public_dir}/summary/${catchup_number}.html";
	fi;
done;

# Build combined summary site
asciidoctor \
	-a webfonts! \
	-o "${public_dir}/summary.html" \
	"${summary_dir}/combined-summary.adoc";
# Lazy load images
sed -i -e 's/<img/<img loading="lazy"/g' "${public_dir}/summary.html";

echo "Summary pages build complete!";
echo;
